// // 1 --------- 算数运算符
// // 取余
// let a = 5 % 4;
// console.log(a);

// // 不要直接判断两个浮点数是否相等

// // 应用: 判断一个数是否能够整除(% 余数为0)
// let b = 10 % 2;
// console.log(b);

// // 2 --------  递增运算符
// let num = 2;
// // 后置递增运算符
// // num++
// console.log(++num + 4);
// // 前置递增运算符 age = age +1
// // ++num
// // console.log(num);

// // 3 --------  比较运算符
// // == 默认转换数据类型，会把字符串型的数据转换为数字型(隐式转换)
// console.log(3 == "3");
// // 全等
// console.log(3 === "3");

// 4 ---------  逻辑运算符
// console.log(3 < 5 && 2 < 3);
// console.log(3 > 5 || 7 < 9);

/* 短路运算 -- 逻辑中断
当有多个表达(值)时，左边的表达式值可以确定结果时，就不再继续运算右边的表达式的值
逻辑与
表达式1 && 表达式2
如果有空的或者否定的为假，其余是真的 ---- '',null,undefined,NaN
如果第一个表达式的值为真，则返回表达式2
如果第一个表达式的值为假，则返回表达式1 */
// console.log(123 && 456); // 456
// console.log('' && 89 && 1+2); // 0 , ''

/* 逻辑或短路运算
如果表达式1为真 -- 返回表达式1
如果表达式1为假 -- 返回表达式2 */
// console.log(123 || 456);
// console.log(0 || 89);

// 5 ------  赋值运算符
let age = 10;
age += 8;
console.log(age);
